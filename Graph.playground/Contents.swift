import UIKit

var str = "Hello, playground"

let graphAM = GraphAdjacencyMatrix<String>()
let a = graphAM.createNode(value: "A")
let b = graphAM.createNode(value: "B")
let c = graphAM.createNode(value: "C")
let d = graphAM.createNode(value: "D")
let e = graphAM.createNode(value: "E")
let f = graphAM.createNode(value: "F")
let g = graphAM.createNode(value: "G")
let h = graphAM.createNode(value: "H")
graphAM.connect(node: b, to: a)
graphAM.connect(node: c, to: a)
graphAM.connect(node: d, to: a)
graphAM.connect(node: e, to: b)
graphAM.connect(node: a, to: b)
graphAM.connect(node: a, to: c)
graphAM.connect(node: f, to: c)
graphAM.connect(node: g, to: c)
graphAM.connect(node: a, to: d)
graphAM.connect(node: b, to: e)
graphAM.connect(node: f, to: e)
graphAM.connect(node: h, to: e)
graphAM.connect(node: c, to: f)
graphAM.connect(node: e, to: f)
graphAM.connect(node: g, to: f)
graphAM.connect(node: c, to: g)
graphAM.connect(node: f, to: g)
graphAM.connect(node: e, to: h)

graph.bfsSearch(node: a)
graph.dfsSearch(node: a)
print(graph)
